---
- name: create timestamp (part 1)
  command: date +"%Y%m%d"
  register: date_output

- name: create timestamp (part 2)
  set_fact:
    backup_timestamp: "{{ date_output.stdout }}"

- name: clear backup file (if it exists)
  file:
    path: ~/mysql_jira_db_backup_{{ backup_timestamp }}.sql
    state: absent

- name: run mysqldump in running container
  command: >
    bash -cl "\
      docker exec mathhacks-jira-db \
        bash -c 'exec mysqldump --all-databases -uroot -p"{{ mysql_root_password }}"' \
        > ~/mysql_jira_db_backup_{{ backup_timestamp }}.sql"

- name: archive mysql backup file
  archive:
    path: ~/mysql_jira_db_backup_{{ backup_timestamp }}.sql
    dest: ~/mysql_jira_db_backup_{{ backup_timestamp }}.sql.tgz

- name: sync mysql backup to s3
  command: aws s3 cp ~/mysql_jira_db_backup_{{ backup_timestamp }}.sql.tgz s3://{{ aws_backups_bucket }} --force --acl private
  environment:
    AWS_ACCESS_KEY_ID: "{{ aws_backups_access_key_id }}"
    AWS_SECRET_ACCESS_KEY: "{{ aws_backups_secret_access_key }}"

- name: clear mysql backup file
  file:
    path: ~/mysql_jira_db_backup_{{ backup_timestamp }}.sql
    state: absent

- name: archive jira home folder
  archive:
    path: /var/atlassian/jira
    dest: ~/jira_home_folder_backup_{{ backup_timestamp }}.tgz
    format: gz

- name: sync jira home folder backup to s3
  command: aws s3 cp ~/jira_home_folder_backup_{{ backup_timestamp }}.tgz s3://{{ aws_backups_bucket }} --force --acl private
  environment:
    AWS_ACCESS_KEY_ID: "{{ aws_backups_access_key_id }}"
    AWS_SECRET_ACCESS_KEY: "{{ aws_backups_secret_access_key }}"

- name: clear mysql backup file
  file:
    path: ~/jira_home_folder_backup_{{ backup_timestamp }}.tgz
    state: absent
